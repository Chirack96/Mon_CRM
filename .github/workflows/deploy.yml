name: CI/CD Pipeline for Angular and Spring Boot

on:
  push:
    branches:
      - main

jobs:
  merge_to_production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0  # Récupère tout l'historique et toutes les branches

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge main into production
        run: |
          git fetch origin  # Assure que la branche production est récupérée
          if git rev-parse --verify production; then
            git checkout production
          else
            git checkout -b production origin/production
          fi
          git merge main --no-commit --no-ff  # Effectue la fusion sans commettre automatiquement
          git restore --staged .github/workflows/  # Réinitialise les workflows pour ne pas les inclure dans le commit
          
          # Vérifier s'il y a des changements à commettre
          if ! git diff-index --quiet HEAD; then
            git commit -m "Merge main into production, excluding workflow changes"
            git push origin production  # Pousse la branche fusionnée
          else
            echo "Rien à commettre, l'arbre de travail est propre."

  build_and_push_images:
    needs: merge_to_production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout production branch
        uses: actions/checkout@v3
        with:
          ref: production
          fetch-depth: 0  # Récupère tout l'historique et toutes les branches

      - name: Check Docker username
        run: |
          echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"  # Étape pour vérifier le nom d'utilisateur Docker

      - name: Docker login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Backend (Spring Boot) Docker image
        run: |
          docker build -t chirack96/springboot-app:latest ./dev  # Forcer le nom d'utilisateur en minuscule
          docker push chirack96/springboot-app:latest  # Pousse l'image backend avec le nom correct

      - name: Build and push Frontend (Angular) Docker image
        run: |
          docker build -t chirack96/angular-app:latest ./Frontend  # Utilise le bon chemin et forcer le nom en minuscule
          docker push chirack96/angular-app:latest  # Pousse l'image frontend avec le nom correct

  deploy_to_server:
    needs: build_and_push_images
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to local server via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd C:/Users/chira/Documents/Pro/Mon_CRM
            docker-compose pull
            docker-compose up -d